---
title: "Практическая работа №6"
author: "Малиновский Артем Васильевич БИСО-01-20"
format: 
  md:
    output-file: README.md
---

## Цель

1.  Закрепить навыки исследования данных журнала Windows Active Directory
2.  Изучить структуру журнала системы Windows Active Directory
3.  Зекрепить практические навыки использования языка программирования R для обработки данных
4.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R

## Исходные данные

1.  ОС Windows 10
2.  RStudio Desktop
3.  Интерпретатор языка R 4.2.2
4.  dplyr

### Подготовка данных, установка пакетов

```{r}
library(dplyr)
library(jsonlite)
library(tidyr)
library(xml2)
library(rvest)
```

### Импорт и подготовка данных DNS

#### 1. Импортируйте данные в R. Это можно выполнить с помощью jsonlite::stream_in(file()) . Датасет находится по адресу https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz.

```{r}
url <- "https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz"

download.file(url, destfile = tf <- tempfile(fileext = ".tar.gz"), mode = "wb")

temp_dir <- tempdir()
untar(tf, exdir = temp_dir)

json_files <- list.files(temp_dir, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
data <- stream_in(file(json_files))
```

#### 2. Привести датасеты в вид "аккуратных данных", преобразовать типы столбцов в соответствии с типом данных

```{r}
data <- data %>%
  mutate(`@timestamp` = as.POSIXct(`@timestamp`, format = "%Y-%m-%dT%H:%M:%OSZ", tz = "UTC")) %>%
  rename(timestamp = `@timestamp`, metadata = `@metadata`)
```

#### 3. Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
data %>% glimpse
```

### Анализ

#### 1. Раскройте датафрейм избавившись от вложенных датафреймов. Для обнаружения таких можно использовать функцию dplyr::glimpse() , а для раскрытия вложенности -- tidyr::unnest() . Обратите внимание, что при раскрытии теряются внешние названия колонок -- это можно предотвратить если использовать параметр tidyr::unnest(..., names_sep = ).

```{r}
data_unnested <- data %>%
  unnest(c(metadata, event, log, winlog, ecs, host, agent), names_sep = ".")

data_unnested %>% glimpse
```

#### 2. Минимизируйте количество колонок в датафрейме -- уберите колоки с единственным значением параметра.

```{r}
data_clear <- data_unnested %>%
  select(-metadata.beat, -metadata.type, -metadata.version, -metadata.topic, 
         -event.kind, -winlog.api, -agent.ephemeral_id, -agent.hostname, 
         -agent.id, -agent.version, -agent.type)

data_clear %>% glimpse
```

#### 3. Какое количество хостов представлено в данном датасете?

```{r}
data_clear %>%
  select(host.name) %>%
  unique
```

#### 4. Подготовьте датафрейм с расшифровкой Windows Event_ID, приведите типы данных к типу их значений.

```{r}
webpage_url <- "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor"
webpage <- xml2::read_html(webpage_url)
event_df <- rvest::html_table(webpage)[[1]]

event_df %>% glimpse
```

### Подготовка данных:

```{r}
event_df <- event_df %>%
  mutate_at(vars(`Current Windows Event ID`, `Legacy Windows Event ID`), as.integer) %>%
  rename(c(Current_Windows_Event_ID = `Current Windows Event ID`, 
           Legacy_Windows_Event_ID = `Legacy Windows Event ID`, 
           Potential_Criticality = `Potential Criticality`, 
           Event_Summary = `Event Summary`))

event_df %>% glimpse
```

#### 5. Есть ли в логе события с высоким и средним уровнем значимости? Сколько их?

```{r}
event_df %>% 
  group_by(Potential_Criticality) %>%
  summarize(count = n()) %>%
  arrange(desc(count))
```

## Оценка результата

В ходе выполнения задания были улучшены навыки работы с языком программирования R в контексте обработки данных.

## Вывод

Исследована структура журнала системы Windows Active Directory, и приобретены дополнительные навыки в области основных методов обработки данных с использованием экосистемы tidyverse в языке программирования R.
